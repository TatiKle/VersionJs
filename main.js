const questionsByLevel = [
	// –í–æ–ø—Ä–æ—Å—ã —É—Ä–æ–≤–Ω—è 1
	[
		{
			question: "–ö–∞–∫ —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è?",
			answers: ["Pen", "Paper", "Pencil"],
			correct: 1,
		  },
		  {
			question: "–ö—Ç–æ  –∏–∑–æ–±—Ä–∞–∂—ë–Ω –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?",
			answers: ["Mouse", "Birds", "Cats"],
			correct: 1,
		  },
		  {
			question: "–ß—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ?",
			answers: ["Banana", "Garlic", "Porridge",],
			correct: 2,
		  },
		  {
			question: "–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —Å–æ—Å—Ç–∞–≤–∏–ª–∏ –∫—É–±–∏–∫–∏?",
			answers: ["–Ω–µ–±–æ", "–º–æ—Ä–µ", "–¥–æ–º"],
			correct: 3,
		  },
		  {
			  question: "–ó–Ω–∞—é—Ç —ç—Ç–æ—Ç —Ñ—Ä—É–∫—Ç –¥–µ—Ç–∏—à–∫–∏, –ª—é–±—è—Ç –µ—Å—Ç—å –µ–≥–æ –º–∞—Ä—Ç—ã—à–∫–∏. –†–æ–¥–æ–º –æ–Ω –∏–∑ –∂–∞—Ä–∫–∏—Ö —Å—Ç—Ä–∞–Ω. –í —Ç—Ä–æ–ø–∏–∫–∞—Ö —Ä–∞—Å—Ç–µ—Ç‚Ä¶",
			  answers: ["door", "table", "banana"],
			  correct: 3,
		  },
		  {
			  question: " –ó–∞–∫–æ–Ω—á–∏ —Ä–∏—Ñ–º—É: –º—ã—à–∫–∞ - mouse, –∞ –∫–æ—à–∫–∞ - cat, –±–µ–ª—ã–π - ‚Ä¶",
			  answers: ["blue", "pink", "white"],
			  correct: 3,
		  },
		  {
			  question: "–ê —á—ë—Ä–Ω—ã–π - ‚Ä¶",
			  answers: ["black", "pink", "blue"],
			  correct: 1,
		  },
		  {
			  question: "–ú—è—Å–æ –∂–∞—Ä–∏—Ç—Å—è, —à–∫–≤–∞—Ä—á–∏—Ç. –ú—è—Å–æ –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏ - ‚Ä¶",
			  answers: ["salt", "water", "meat"],
			  correct: 3,
		  },
		  {
			  question: "–ü—Ä–æ–¥–æ–ª–∂–∏ –∞–ª—Ñ–∞–≤–∏—Ç: a, b, c",
			  answers: ["j, k", "d, e", "h, i	"],
			  correct: 2,
		  },
		  {
			  question: "2 + 1 =",
			  answers: ["one", "two", "three"],
			  correct: 3,
		  },
		  {
			  question: "–ö–æ –º–Ω–µ –ø—Ä–∏—à–µ–ª –¥—Ä—É–≥ –Ω–∞ –æ–±–µ–¥. –í –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –¥—Ä—É–≥ –∑–æ–≤—ë—Ç—Å—è ‚Ä¶",
			  answers: ["kent", "friend", "bread"],
			  correct: 2,
		  },
		  {
			  question: "5 - 2 =",
			  answers: ["three", "tree", "free"],
			  correct: 1,
		  },
		  {
			  question: "–ö—É–¥–∞ –∏–¥—É—Ç —Ä–µ–±—è—Ç–∞?",
			  answers: ["factory", "river", "school"],
			  correct: 3,
		  },
		  {
			  question: "–ö–∞–∫–∞—è –±—É–∫–≤–∞ –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–µ - –ø–æ—Å–ª–µ–¥–Ω—è—è?",
			  answers: ["z", "o", "v"],
			  correct: 1,
		  },
		  {
			  question: "–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ?",
			  answers: ["run", "swim", "eat"],
			  correct: 1,
		  },
		  {
			  question: "Mother, father, uncle, brother, son and daughter, –∞ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º - —ç—Ç–æ‚Ä¶",
			  answers: ["friends", "animals", "family"],
			  correct: 3,
		  },
		  {
			  question: "–£–±–µ—Ä–∏—Ç–µ –ª–∏—à–Ω–µ–µ",
			  answers: ["black", "white", "mother"],
			  correct: 3,
		  },
		  {
			  question: "–£–±–µ—Ä–∏—Ç–µ –ª–∏—à–Ω–µ–µ",
			  answers: ["bear", "apple", "tiger"],
			  correct: 2,
		  },
		  {
			  question: "–£–±–µ—Ä–∏—Ç–µ –ª–∏—à–Ω–µ–µ",
			  answers: ["two", "five", "red"],
			  correct: 3,
		  },
		  {
			  question: "–ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ ‚Äún‚Äù –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫:",
			  answers: ["H", "P", "N"],
			  correct: 3,
		  },
		  {
			  question: "–ß—Ç–æ —ç—Ç–æ –∑–∞ —Ü–∏—Ñ—Ä–∞?",
			  answers: ["six", "seven", "five"],
			  correct: 2,
		  },
		  {
			  question: "–ß—Ç–æ —ç—Ç–æ –∑–∞ —Ü–∏—Ñ—Ä–∞?",
			  answers: ["four", "one", "two"],
			  correct: 1,
			},
	],
	// –í–æ–ø—Ä–æ—Å—ã —É—Ä–æ–≤–Ω—è 2
	[
	  {
		question: "",
		answer: 1,
	  },
	  {
		question: "",
		answer:1 ,
	  },
	 
	],
	// –í–æ–ø—Ä–æ—Å—ã —É—Ä–æ–≤–Ω—è 3
	[
	  {
		question: "",
		answer:1 ,
	  },
	  {
		question: "",
		answer: 1,
	  },
	
	],
	// –í–æ–ø—Ä–æ—Å—ã —É—Ä–æ–≤–Ω—è 4
	[
	  {
		question: "",
		answer: 1,
	  },
	  {
		question: "",
		answer: 1,
	  },
	  
	],
  ];
  
  let score = 0;
  let questionIndex = 0;
  let userClass = 0;
  
  function clearPage() {
	console.log('clearPage');
  }
  
  function showClassQuestion() {
	console.log('showClassQuestion');
	const userClassInput = prompt('–í –∫–∞–∫–æ–º —Ç—ã –∫–ª–∞—Å—Å–µ? (–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4)');
  
	userClass = parseInt(userClassInput);
  
	if (isNaN(userClass) || userClass < 1 || userClass > 4) {
	  alert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.');
	  showClassQuestion();
	  return;
	}
  
	questionIndex = 0;
	clearPage();
	showQuestion();
  }
  
  function showQuestion() {
	console.log('showQuestion');
  
	const currentLevelQuestions = questionsByLevel[userClass - 1];
  
	if (questionIndex >= currentLevelQuestions.length) {
	  console.log('–í–æ–ø—Ä–æ—Å—ã –¥–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å');
	  return;
	}
  
	const currentQuestion = currentLevelQuestions[questionIndex];
	console.log(currentQuestion.question);
  
	const userAnswer = prompt(currentQuestion.question);
	const parsedUserAnswer = parseInt(userAnswer);
  
	if (parsedUserAnswer === currentQuestion.answer) {
	  score++;
	}
  
	questionIndex++;
  
	showQuestion();
  }
  
  function showResults() {
	console.log('showResults started');
	console.log(score);
  
	let title, message;
  
	if (score === questionsByLevel[userClass - 1].length) {
	  title = '‚ú® –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•á';
	  message = '‚ú® –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!üòéüëç';
	} else if ((score * 100) / questionsByLevel[userClass - 1].length >= 50) {
	  title = '‚ú® –ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! ü•à';
	  message = '‚ú® –í—ã –¥–∞–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ üéâ';
	} else {
	  title = '‚ú® –°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è ü•â';
	  message = '‚ú® –ü–æ–∫–∞ —É –í–∞—Å –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ üç™';
	}
  
	const result = `${score} –∏–∑ ${questionsByLevel[userClass - 1].length}`;
  
	const resultsTemplate = `
	  %title%
	  %message%
	  %result%
	`;
  
	const finalMessage = resultsTemplate
	  .replace('%title%', title)
	  .replace('%message%', message)
	  .replace('%result%', result);
  
	console.log(finalMessage);
  }